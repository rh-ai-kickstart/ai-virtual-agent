apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ai-virtual-assistant.fullname" . }}
  labels:
    {{- include "ai-virtual-assistant.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ai-virtual-assistant.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ai-virtual-assistant.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ai-virtual-assistant.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: oauth-proxy
          args:
            - -provider=openshift
            - -https-address=:8888
            - -http-address=
            - -email-domain=*
            - -upstream=http://localhost:8000
            - -pass-user-headers=true
            - -tls-cert=/etc/tls/private/tls.crt
            - -tls-key=/etc/tls/private/tls.key
            - -cookie-secret-file=/etc/proxy/secrets/session_secret
            - -openshift-service-account=ai-virtual-assistant-proxy-sa
            - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - -skip-auth-regex=^/metrics
          image: quay.io/openshift/origin-oauth-proxy:4.17
          imagePullPolicy: IfNotPresent
          ports:
            - name: oauth-proxy
              containerPort: 8888
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/tls/private
              name: secret-ai-virtual-assistant-tls
            - mountPath: /etc/proxy/secrets
              name: secret-ai-virtual-assistant-proxy

        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.pgSecret }}
                  key: host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.pgSecret }}
                  key: port
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.pgSecret }}
                  key: user
            - name: DB_NAME
              value: {{ .Values.dbName }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.pgSecret }}
                  key: password
            - name: DATABASE_URL
              value: 'postgresql+asyncpg://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)'
            - name: LLAMASTACK_URL
              value: '{{ .Values.llama_stack_url }}'
            - name: INGESTION_PIPELINE_URL
              value: http://{{ .Release.Name }}-ingestion-pipeline
            {{- if .Values.seed.admin_user.username }}
            - name: ADMIN_USERNAME
              value: '{{ .Values.seed.admin_user.username }}'
            {{- end }}
            {{- if .Values.seed.admin_user.email }}
            - name: ADMIN_EMAIL
              value: '{{ .Values.seed.admin_user.email }}'
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: agent-config-volume
              mountPath: /etc/agent-config
              readOnly: true
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: agent-config-volume
          configMap:
            name: {{ include "ai-virtual-assistant.fullname" . }}-agent-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
