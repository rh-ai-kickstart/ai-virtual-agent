{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mcp-dbstore.fullname" . }}-postgresql
  labels:
    {{- include "mcp-dbstore.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "mcp-dbstore.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "mcp-dbstore.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mcp-dbstore.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.postgresql.podSecurityContext | nindent 8 }}
      containers:
        - name: postgresql
          securityContext:
            {{- toYaml .Values.postgresql.securityContext | nindent 12 }}
          image: "{{ .Values.postgresql.image.registry }}/{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          ports:
            - name: tcp-postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "mcp-dbstore.fullname" . }}-postgresql
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mcp-dbstore.fullname" . }}-postgresql
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "mcp-dbstore.fullname" . }}-postgresql
                  key: database
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            {{- range $key, $value := .Values.postgresql.postgresqlConfiguration }}
            - name: {{ $key | upper | replace "_" "_" }}
              value: {{ $value | quote }}
            {{- end }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "${POSTGRES_USER}" -d "${POSTGRES_DB}" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "${POSTGRES_USER}" -d "${POSTGRES_DB}" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            {{- if .Values.postgresql.initdb.enabled }}
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
      volumes:
        - name: data
          {{- if .Values.postgresql.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "mcp-dbstore.fullname" . }}-postgresql-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.postgresql.initdb.enabled }}
        - name: init-scripts
          configMap:
            name: {{ include "mcp-dbstore.fullname" . }}-postgresql-init
            defaultMode: 0755
        {{- end }}
      {{- with .Values.postgresql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgresql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgresql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 