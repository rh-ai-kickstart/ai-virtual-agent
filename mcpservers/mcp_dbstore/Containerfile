# Containerfile for MCP Store Server (Direct DB Access)

FROM python:3.10-slim

# Add metadata labels for better container management
LABEL org.opencontainers.image.title="MCP DBStore Server"
LABEL org.opencontainers.image.description="FastMCP server providing database-backed product inventory tools"
LABEL org.opencontainers.image.version="0.0.1"
LABEL org.opencontainers.image.source="https://github.com/yourusername/ai-virtual-assistant"
LABEL org.opencontainers.image.documentation="https://github.com/yourusername/ai-virtual-assistant/tree/main/mcpservers/mcp_dbstore"

WORKDIR /app

# Install system dependencies for PostgreSQL client for debugging
# RUN apt-get update && apt-get install -y \
#     libpq-dev \
#     && rm -rf /var/lib/apt/lists/*

# Copy the entire mcpservers package structure and the specific requirements file
# This assumes the build context is the project root.
COPY ./mcpservers/mcp_dbstore /app/mcpservers/mcp_dbstore

# Install Python dependencies for mcp_dbstore
RUN pip install --no-cache-dir -r /app/mcpservers/mcp_dbstore/requirements.txt

# Environment variables with defaults
# Main database connection URL - should be overridden at runtime
ENV DATABASE_URL="postgresql+asyncpg://mcpuser:mcppassword@postgres-service:5432/store_db"

# Ensures Python can find the mcpservers package from the /app directory
ENV PYTHONPATH=/app

# Additional environment variables for configuration
ENV MCP_SERVER_PORT=8002
ENV MCP_SERVER_HOST=0.0.0.0
ENV MCP_SERVER_TRANSPORT=sse

# Create non-root user for security
RUN groupadd -r mcpuser && useradd -r -g mcpuser mcpuser
RUN chown -R mcpuser:mcpuser /app
USER mcpuser

# Expose the correct port that matches store.py
EXPOSE 8002

# Health check to ensure the server is running properly
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8002/health || exit 1

# Command to run the MCP server
CMD ["python", "-m", "mcpservers.mcp_dbstore.store"]
